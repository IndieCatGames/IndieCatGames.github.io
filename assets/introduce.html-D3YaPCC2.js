import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,b as t,d as l,e as h,r,o as p}from"./app-CRyeSya0.js";const k={};function d(o,i){const e=r("RouteLink");return p(),n("div",null,[i[2]||(i[2]=s("h1",{id:"unreal-imgui",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#unreal-imgui"},[s("span",null,"Unreal ImGui")])],-1)),s("figure",null,[l(e,{to:"/zh/fab/imgui/LICENSE.html"},{default:h(()=>i[0]||(i[0]=[s("img",{src:"https://img.shields.io/badge/license-MIT-blue.svg",alt:"MIT licensed",tabindex:"0",loading:"lazy"},null,-1)])),_:1}),i[1]||(i[1]=s("figcaption",null,"MIT licensed",-1))]),i[3]||(i[3]=t(`<p>Unreal ImGui is an Unreal Engine 5 plug-in that integrates <a href="https://github.com/ocornut/imgui" target="_blank" rel="noopener noreferrer">Dear ImGui</a> developed by Omar Cornut.</p><p>Dear ImGui is an immediate-mode graphical user interface library that is very lightweight and easy to use. It can be very useful when creating debugging tools.</p><h2 id="read-me-first" tabindex="-1"><a class="header-anchor" href="#read-me-first"><span>⏹️ Read Me First</span></a></h2><p>Please note that this is a forked project from forked project <a href="https://github.com/benui-dev/UnrealImGui" target="_blank" rel="noopener noreferrer">https://github.com/benui-dev/UnrealImGui</a>. I do not take credit for the work he&#39;s put into making Dear ImGui work in Unreal Engine. The work I&#39;ve done to this fork is listed below.</p><p>I&#39;ve reworked input system for properly working newer versions. If you wish to read the original <a href="http://readme.md" target="_blank" rel="noopener noreferrer">readme.md</a>, please see this link: <a href="https://github.com/benui-dev/UnrealImGui/blob/master/README.md" target="_blank" rel="noopener noreferrer">UnrealImGui ReadMe.md</a>.</p><p>Also note that the NetImGui branch is not up to date with any of this fork&#39;s changes.</p><h2 id="fork-additions-fixes" tabindex="-1"><a class="header-anchor" href="#fork-additions-fixes"><span>Fork Additions/Fixes</span></a></h2><ul><li>Updated core source files for Unreal Engine 5.5.</li><li>Updated Dear ImGui to 1.91.6.</li><li><code>ImGui::IsKey*</code> now functional with all known ImGui keys.</li><li>Updated input handling flow to be <a href="https://github.com/ocornut/imgui/issues/4921" target="_blank" rel="noopener noreferrer">standard compliant</a> with Dear ImGui 1.87 which makes ImGui react better at low FPS</li><li>Allowed <code>UTexture</code> for Texture Manager so render targets can also be rendered to quads rather than just being limited to using <code>UTexture2D</code> instances.</li><li>Added the ability to instruct ImGui context to build custom fonts (like FontAwesome).</li></ul><h2 id="status" tabindex="-1"><a class="header-anchor" href="#status"><span>Status</span></a></h2><p>UnrealImGui Version: 1.22</p><p>ImGui version: 1.91.6</p><p>ImPlot version: v0.17 WIP</p><p>Supported Unreal Engine version: 5.5*</p><p>* <em>The original repository has support for later versions of UE4. I&#39;ve not tested this fork on UE4 variants, I only know it works for UE5 currently.</em></p><h2 id="how-to-set-up" tabindex="-1"><a class="header-anchor" href="#how-to-set-up"><span>How to Set up</span></a></h2><p>On top of reading the base repository&#39;s <a href="https://github.com/segross/UnrealImGui/blob/master/README.md#how-to-set-up" target="_blank" rel="noopener noreferrer">How to Set up</a> segment, you&#39;ll need to add the following line to your <code>[GameName].Build.cs</code> file otherwise you&#39;ll get linking errors:</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Tell the compiler we want to import the ImPlot symbols when linking against ImGui plugin </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">PrivateDefinitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IMPLOT_API=DLLIMPORT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="additional-knowledge" tabindex="-1"><a class="header-anchor" href="#additional-knowledge"><span>Additional Knowledge</span></a></h1><h2 id="using-implot" tabindex="-1"><a class="header-anchor" href="#using-implot"><span>Using ImPlot</span></a></h2><p>It&#39;s pretty easy to use ImPlot, it&#39;s pretty much the same drill as using Dear ImGui with the UnrealImGui plugin. You can see documentation on how to use ImPlot here: <a href="https://github.com/epezent/implot" target="_blank" rel="noopener noreferrer">ImPlot</a>.</p><p>The only thing you won&#39;t need to do is call the <code>ImPlot::CreateContext()</code> and <code>ImPlot::DestroyContext</code> routines as they&#39;re already called when ImGui&#39;s context is created within UnrealImGui&#39;s guts.</p><h2 id="drawing-a-utexturerendertarget2d" tabindex="-1"><a class="header-anchor" href="#drawing-a-utexturerendertarget2d"><span>Drawing a UTextureRenderTarget2D</span></a></h2><p>One might want to render viewports into the world in an ImGui window. You can do this pretty simply by generating a <code>UTextureRenderTarget2D</code> then assigning that to a <code>ASceneCapture2D</code> actor in your world. Here&#39;s some sample code for generating an correctly managing the <code>UTextureRenderTarget2D</code>:</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    TextureRenderTarget </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> NewObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UTextureRenderTarget2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">IsValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TextureRenderTarget))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        TextureRenderTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitAutoFormat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        TextureRenderTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UpdateResourceImmediate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ... Generate a unique TextureName here</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Register this render target as an ImGui interop handled texture</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ImGuiTextureHandle </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FImGuiModule::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FindTextureHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TextureName);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ImGuiTextureHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">IsValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">IsValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TextureRenderTarget))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            ImGuiTextureHandle </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FImGuiModule::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RegisterTexture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TextureName, TextureRenderTarget, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Requires releasing to avoid memory leak</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    FImGuiModule::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ReleaseTexture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ImGuiTextureHandle);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Actually submit the draw command to ImGui to render the quad with the texture</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ImGuiTextureHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">IsValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ImGui::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ImGuiTextureHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetTextureId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">512.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">512.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then generating the <code>ASceneCapture2D</code>:</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    FActorSpawnParameters SpawnInfo;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    SceneCapture2D </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> World</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SpawnActor</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ASceneCapture2D</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FVector::ZeroVector, FRotator::ZeroRotator, SpawnInfo);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    SceneCaptureComponent2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextureTarget</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TextureRenderTarget;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    SceneCaptureComponent2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UpdateContent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Need to use this in order to force capture to use tone curve and also set alpha to scene alpha (1)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    SceneCaptureComponent2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CaptureSource</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ESceneCaptureSource::SCS_FinalToneCurveHDR;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h3><p>If you&#39;re using a scene capture and your quad is not drawing at all, make sure your scene capture &quot;Capture Source&quot; is set to &quot;Final Color (with tone curve) in Linear sRGB gamut&quot; to avoid alpha being set to 0 (since there&#39;s no way to instruct ImGui to ignore alpha without modding the core UnrealImGui plugin).</p><p>If you&#39;re getting crashes or seg faults during rendering, make sure you&#39;re using <code>UPROPERTY()</code> on your class variables!</p><h2 id="adding-custom-fonts" tabindex="-1"><a class="header-anchor" href="#adding-custom-fonts"><span>Adding custom fonts</span></a></h2><h3 id="fontawesome" tabindex="-1"><a class="header-anchor" href="#fontawesome"><span>FontAwesome</span></a></h3><p>Adding custom fonts is fairly simple. As a more complex and more commonly done, we&#39;re going to embed and build FontAwesome 6 into the font atlas. First thing you&#39;ll need is a binary C version of the FontAwesome font along with the necessary <a href="https://github.com/juliettef/IconFontCppHeaders/blob/main/IconsFontAwesome6.h" target="_blank" rel="noopener noreferrer">companion descriptors</a>. The descriptors are pre-generated, however if you have a new version of FA you wish to use, then use the Python script in that repository. As for the binary C, you&#39;ll need to compile Dear ImGui&#39;s <a href="https://github.com/ocornut/imgui/blob/master/misc/fonts/binary_to_compressed_c.cpp" target="_blank" rel="noopener noreferrer">binary_to_compressed_c.cpp</a>.</p><p>Once you have the necessary files, you&#39;ll need to encode your FontAwesome font using the command:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>binary_to_compressed_c.exe -nocompress fa-solid-900.ttf FontAwesomeFont &gt; FontAwesomeFont.h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The only mandatory field here is <code>-nocompress</code> as this instructs the encoder to create an uncompressed binary file (1:1) since currently there&#39;s no immediate support for compressed fonts.</p><p>Move over your descriptors and your binary C font file to an appropriate location for inclusion in your Unreal Engine project. The following code is how to instruct ImGui to build the font atlas with your FontAwesome font:</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;FontAwesomeFont.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;IconsFontAwesome6.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Add FontAwesome font glyphs from memory</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TSharedPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ImFontConfig</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FAFontConfig </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> MakeShareable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ImFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ImWchar IconRange[] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { ICON_MIN_FA, ICON_MAX_FA, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">FontDataOwnedByAtlas</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Global font data lifetime</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">FontData</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">             =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)FontAwesomeData;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Declared in binary C .h file</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">FontDataSize</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">         =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FontAwesomeSize;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Declared in binary C .h file</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SizePixels</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">           =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MergeMode</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Forces ImGui to place this font into the same atlas as the previous font</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">GlyphRanges</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> IconRange;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Required; instructs ImGui to use these glyphs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">GlyphMinAdvanceX</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Use for monospaced icons</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PixelSnapH</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">           =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Better rendering (align to pixel grid)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    FAFontConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">GlyphOffset</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // Moves icons around, for alignment with general typesets</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    FImGuiModule::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddCustomFont</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;FontAwesome&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, FAFontConfig);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    FImGuiModule::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RebuildFontAtlas</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s it. Make sure you execute the above code once at the beginning of the first ImGui frame (or at any point of your framework where the ImGui context has been initialized correctly) and it should build the main atlas with FontAwesome inside it. ImFontConfig lifetime is currently managed via reference counting (<code>TSharedPtr</code>).</p><h3 id="using-the-icons" tabindex="-1"><a class="header-anchor" href="#using-the-icons"><span>Using the icons</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;IconsFontAwesome6.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> OnPaint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ImGui::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ICON_FA_AWARD);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pretty simple. Building FStrings that incorporate FontAwesome icons however gets a little trickier:</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">FString Str </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello &quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> +</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> FString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UTF8_TO_TCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ICON_FA_WAVE_SQUARE)) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; World&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ImGui</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TextUnformatted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TCHAR_TO_UTF8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Str));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="more-info" tabindex="-1"><a class="header-anchor" href="#more-info"><span>More info</span></a></h3><ul><li><a href="https://github.com/ocornut/imgui/blob/master/docs/FONTS.md" target="_blank" rel="noopener noreferrer">Dear ImGui: Using Fonts</a></li><li><a href="https://github.com/juliettef/IconFontCppHeaders" target="_blank" rel="noopener noreferrer">IconFontCppHeaders</a></li><li><a href="https://pixtur.github.io/mkdocs-for-imgui/site/FONTS/" target="_blank" rel="noopener noreferrer">FontAwesome with general Dear ImGui</a></li></ul><h1 id="misc" tabindex="-1"><a class="header-anchor" href="#misc"><span>Misc</span></a></h1><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also"><span>See also</span></a></h2><ul><li><a href="https://github.com/segross/UnrealImGui" target="_blank" rel="noopener noreferrer">Original Project by segross</a></li><li><a href="https://github.com/ocornut/imgui" target="_blank" rel="noopener noreferrer">Dear ImGui</a></li><li><a href="https://github.com/epezent/implot" target="_blank" rel="noopener noreferrer">ImPlot</a></li></ul><h2 id="license" tabindex="-1"><a class="header-anchor" href="#license"><span>License</span></a></h2><p>Unreal ImGui (and this fork) is licensed under the MIT License, see LICENSE for more information.</p>`,49))])}const A=a(k,[["render",d],["__file","introduce.html.vue"]]),u=JSON.parse('{"path":"/zh/fab/imgui/introduce.html","title":"Unreal ImGui","lang":"zh-CN","frontmatter":{"description":"Unreal ImGui MIT licensed Unreal ImGui is an Unreal Engine 5 plug-in that integrates Dear ImGui developed by Omar Cornut. Dear ImGui is an immediate-mode graphical user interfac...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://indiecatgames.github.io/fab/imgui/introduce.html"}],["meta",{"property":"og:url","content":"https://indiecatgames.github.io/zh/fab/imgui/introduce.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"Unreal ImGui"}],["meta",{"property":"og:description","content":"Unreal ImGui MIT licensed Unreal ImGui is an Unreal Engine 5 plug-in that integrates Dear ImGui developed by Omar Cornut. Dear ImGui is an immediate-mode graphical user interfac..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/badge/license-MIT-blue.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-09T16:29:44.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-09T16:29:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Unreal ImGui\\",\\"image\\":[\\"https://img.shields.io/badge/license-MIT-blue.svg\\"],\\"dateModified\\":\\"2025-02-09T16:29:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"IndieCat\\",\\"url\\":\\"https://github.com/IndieCatGames\\"}]}"]]},"headers":[{"level":2,"title":"⏹️ Read Me First","slug":"read-me-first","link":"#read-me-first","children":[]},{"level":2,"title":"Fork Additions/Fixes","slug":"fork-additions-fixes","link":"#fork-additions-fixes","children":[]},{"level":2,"title":"Status","slug":"status","link":"#status","children":[]},{"level":2,"title":"How to Set up","slug":"how-to-set-up","link":"#how-to-set-up","children":[]},{"level":2,"title":"Using ImPlot","slug":"using-implot","link":"#using-implot","children":[]},{"level":2,"title":"Drawing a UTextureRenderTarget2D","slug":"drawing-a-utexturerendertarget2d","link":"#drawing-a-utexturerendertarget2d","children":[{"level":3,"title":"Troubleshooting","slug":"troubleshooting","link":"#troubleshooting","children":[]}]},{"level":2,"title":"Adding custom fonts","slug":"adding-custom-fonts","link":"#adding-custom-fonts","children":[{"level":3,"title":"FontAwesome","slug":"fontawesome","link":"#fontawesome","children":[]},{"level":3,"title":"Using the icons","slug":"using-the-icons","link":"#using-the-icons","children":[]},{"level":3,"title":"More info","slug":"more-info","link":"#more-info","children":[]}]},{"level":2,"title":"See also","slug":"see-also","link":"#see-also","children":[]},{"level":2,"title":"License","slug":"license","link":"#license","children":[]}],"git":{"createdTime":1739095542000,"updatedTime":1739118584000,"contributors":[{"name":"indiecat","username":"indiecat","email":"indiecat@163.com","commits":1,"url":"https://github.com/indiecat"},{"name":"IndieCat","username":"IndieCat","email":"indiecat@163.com","commits":2,"url":"https://github.com/IndieCat"}]},"readingTime":{"minutes":3.8,"words":1139},"filePathRelative":"zh/fab/imgui/introduce.md","localizedDate":"2025年2月9日","autoDesc":true}');export{A as comp,u as data};
